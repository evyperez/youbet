@use 'sass:map';
@use '../abstracts/index' as my;
@use 'abstracts/functions' as f;

/**
 * The main content of a document.
 *
 * This marks the content that is directly related to or expands upon the central topic of the document. The main role is a non-obtrusive alternative for "skip to main content" links, where the navigation option to go to the main content (or other landmarks) is provided by the user agent through a dialog or by assistive technologies.
 *
 * Within any `document` or `application`, the author **SHOULD** mark no more than one element with the `main` role.
 *
 * An `article` element can have the `[role='main']`
 */

.page > section {
  &:nth-of-type(even) {
    background-color: my.palette('gray', '5%');
  }
}

.main-container {
  display: flex;

  flex: 1;
  flex-direction: column;
}

main,
[role='main'] {
  display: flex;

  flex: 1;
  flex-grow: 1;

  width: 100%;
}

.internal-page {
  article {
    padding-top: f.to-rem(32px);
    padding-bottom: f.to-rem(32px);

    @media screen and (min-width: #{map.get(my.$breakpoints, 'tablet__portrait')}) {
      padding-top: f.to-rem(42px);
      padding-bottom: f.to-rem(42px);
    }
  }

  section {
    padding-top: f.to-rem(32px);
    padding-bottom: f.to-rem(32px);

    @media screen and (min-width: #{map.get(my.$breakpoints, 'tablet__portrait')}) {
      padding-top: f.to-rem(80px);
      padding-bottom: f.to-rem(80px);
    }
  }

  &--programs article:nth-of-type(even) {
    background-color: my.palette('orange', '5%');
  }
}

.container {
  width: 100%;
  max-width: my.$max-width;
  padding-right: my.$small-gutter;
  padding-left: my.$small-gutter;
  margin-right: auto;
  margin-left: auto;

  @media screen and (min-width: breakpoint('phone')) {
    padding-right: my.$gutter;
    padding-left: my.$gutter;
  }

  @media screen and (min-width: #{map.get(my.$breakpoints, 'tablet__portrait')}) {
    max-width: my.$max-width--desktop;
  }
}

.container--narrow {
  @media screen and (min-width: breakpoint('laptop')) {
    max-width: my.$max-width--narrow;
  }
}

.page > section > .container {
  padding-top: f.to-em(32px);
  padding-bottom: f.to-em(32px);

  @media screen and (min-width: breakpoint('laptop')) {
    padding-top: f.to-em(68px);
    padding-bottom: f.to-em(68px);
  }

  @media screen and (min-width: #{map.get(my.$breakpoints, 'tablet__portrait')}) {
    padding-top: f.to-em(80px);
    padding-bottom: f.to-em(80px);
  }
}

.info-page > section > .container {
  padding-top: f.to-em(32px);
  padding-bottom: f.to-em(32px);
}

.wrap-gap {
  display: grid;

  grid-template-rows: auto;

  row-gap: f.to-rem(32px);

  width: 100%;
}

footer .container {
  padding: f.to-rem(16px);
}

